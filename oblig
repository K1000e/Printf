Partie obligatoire

Nom du programme	libftprintf.a
Fichiers de rendu	Makefile, *.h, */*.h, *.c, */*.c
Libft autorisée		Oui
Makefile			NAME, all, clean, fclean, re
Fonctions externes autorisées	malloc, free, write, va_start,
							va_arg, va_copy, va_end
					
Description			Une bibliothèque qui contient ft_printf(), une
				fonction imitant la fonction printf() originale

Vous devez implémenter la fonction printf() de la libc. 

Le prototype de ft_printf() devra être :

 int    ft_printf(const char *, ...);

Voici quelques impératifs à respecter :
• Contrairement à la fonction printf() originale, vous ne devez pas gérer de buffer.
• Vous devez gérer les conversions suivantes : c s p d i u x X %
• Votre rendu sera comparé à la fonction printf() originale.
• Vous devez utiliser la commande ar pour créer votre bibliothèque.
	L’utilisation de la commande libtool est interdite.
• Votre libftprintf.a doit être créé à la racine de votre dépôt.

Vous devez implémenter les conversions suivantes :
• %c Affiche un seul caractère.
• %s Affiche une chaîne de caractères (telle que définie par la convention C). 
• %p L’argument de pointeur void * doit être affiché en hexadécimal.
• %d Affiche un nombre décimal (base 10).
• %i Affiche un entier en base 10.
• %u Affiche un nombre décimal non signé (base 10).
• %x Affiche un nombre en hexadécimal (base 16) avec des lettres minuscules. 
• %X Affiche un nombre en hexadécimal (base 16) avec des lettres majuscules. 
• %% Affiche un signe pourcentage.

Partie bonus
Vous n’avez pas l’obligation de faire tous les bonus. Liste de bonus :
• Gérez toute combinaison des drapeaux suivants : ’-0.’ ainsi que la largeur mini- male du champ avec toutes les conversions.
• Gérez tous les drapeaux suivants : ’# +’ (Oui, l’espace est un drapeau valide)
Si vous envisagez de faire des bonus, il vaut mieux réfléchir à leur
implémentation dès le début afin d’éviter une approche "naïve".